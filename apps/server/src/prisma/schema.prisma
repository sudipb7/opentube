generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MemberRole {
  OWNER
  EDITOR
  MANAGER
  VIEWER
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  password      String?
  emailVerified DateTime? @map("email_verified")
  metaData      Json?     @map("meta_data")

  members Member[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Channel {
  id           String  @id @default(cuid())
  name         String
  handle       String  @unique
  description  String?
  image        String?
  bannerImage  String? @map("banner_image")
  contactEmail String? @map("contact_email")
  language     String?
  metaData     Json?   @map("meta_data")

  links   Link[]
  members Member[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("channels")
}

model Member {
  id        String     @id @default(cuid())
  channelId String     @map("channel_id")
  userId    String     @map("user_id")
  role      MemberRole @default(VIEWER)

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  channel Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([channelId])
  @@index([userId])
  @@map("members")
}

model Link {
  id        String @id @default(cuid())
  title     String
  url       String
  channelId String @map("channel_id")

  channel Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([channelId])
  @@map("links")
}
